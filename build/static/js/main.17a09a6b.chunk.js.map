{"version":3,"sources":["components/WhiteBoard/index.module.scss","app.module.scss","components/WhiteBoard/eraserBrush.js","components/WhiteBoard/index.jsx","App.js","index.js"],"names":["module","exports","__setBgOverlayColor","fabric","StaticCanvas","prototype","___setBgOverlay","__setBgOverlay","util","object","extend","backgroundColor","undefined","overlayColor","property","color","callback","options","_this","this","cb","Rect","width","height","fill","call","colorStops","Gradient","value","loaded","type","enlivenObjects","enlivedObject","_renderBackgroundOrOverlay","ctx","v","viewportTransform","needsVpt","save","transform","render","restore","toObject","Object","erasable","getEraser","clipPath","eraser","additionalProperties","concat","groupToObject","Group","Canvas","isErasing","isDrawingMode","freeDrawingBrush","_isErasing","renderAll","contextTopDirty","_groupSelector","clearContext","contextTop","hasLostContext","renderTopLayer","canvasToDrawOn","contextContainer","renderCanvas","_chooseObjectsToRender","_render","EraserBrush","createClass","PencilBrush","_ready","_drawOverlayOnTop","initialize","canvas","callSuper","_renderBound","bind","forCanvasDrawables","hideObject","_originalOpacity","opacity","set","restoreObjectVisibility","prepareCanvasBackgroundForLayer","layer","image","get","erasablesOnLayer","prepareCanvasOverlayForLayer","renderOverlayOnTop","restoreCanvasDrawables","prepareCollectionTraversal","collection","forEachObject","obj","restoreCollectionTraversal","prepareCanvasObjectsForLayer","restoreCanvasObjectsFromLayer","prepareCanvasForLayer","restoreCanvasFromLayer","renderBottomLayer","getContext","getObjects","filter","isType","renderOverlay","_saveAndTransform","_renderOverlay","globalCompositeOperation","needsFullRender","onMouseDown","pointer","_isMainEvent","e","_prepareForDrawing","_captureDrawingPath","fire","isRendering","requestAnimFrame","_addPathToObjectEraser","path","clipObject","_obj","objects","originX","originY","boundingObjects","clone","desiredTransform","multiplyTransformMatrices","invertTransform","calcTransformMatrix","applyTransformToObject","addWithUpdate","dirty","applyEraserToCanvas","drawable","imgProp","_","colorProp","sourceImage","sourceColor","_finalizeAndAddPath","closePath","decimate","_points","decimatePoints","pathData","length","convertPointsToSVGPath","join","requestRenderAll","createPath","intersectsWithObject","setCoords","_resetShadow","origX","origY","chooseOptions","icon","iconOnly","className","drawInstance","mouseDown","currentMode","currentColor","currentWidth","group","modes","RECTANGLE","TRIANGLE","ELLIPSE","LINE","PENCIL","startAddLine","getPointer","Line","x","y","strokeWidth","stroke","selectable","add","startDrawingLine","x2","y2","stopDrawingLine","startAddRect","left","top","selectionBackgroundColor","startDrawingRect","Math","abs","stopDrawingRect","startAddEllipse","Ellipse","cornerSize","objectCaching","startDrawingEllipse","rx","ry","stopDrawingEllipse","startAddTriangle","Triangle","startDrawingTriangle","stopDrawingTriangle","Whiteboard","useState","setCanvas","canvasJSON","isFill","setIsFill","fileUploadRef","useRef","useEffect","addCanvasEventListeners","loadFromJSON","on","event","JSON","stringify","toJSON","styles","whiteboard","toolbar","label","onClick","off","selection","hoverCursor","map","item","discardActiveObject","createLine","createRect","createEllipse","createTriangle","imageUrl","Image","fromURL","img","scaleToWidth","scaleToHeight","setBackgroundImage","createBackgroundImage","draw","changeToErasingMode","text","Textbox","editable","createText","onChange","target","min","max","step","parseInt","id","checked","console","log","htmlFor","forEach","backgroundImage","remove","clearCanvas","alert","canvasToJson","data","parse","canvasFromJson","ref","multiple","name","url","onUpload","reader","FileReader","file","files","addEventListener","result","readAsDataURL","accept","mode","auto","chooseLabel","App","app","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.17a09a6b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"toolbar\":\"WhiteBoard_toolbar__26tCb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"app_app__3mk8F\"};","(function () {\n  var __setBgOverlayColor = fabric.StaticCanvas.prototype.__setBgOverlayColor;\n  var ___setBgOverlay = fabric.StaticCanvas.prototype.__setBgOverlay;\n  fabric.util.object.extend(fabric.StaticCanvas.prototype, {\n    backgroundColor: undefined,\n    overlayColor: undefined,\n    /**\n     * Create Rect that holds the color to support erasing\n     * patches {@link CommonMethods#_initGradient}\n     * @private\n     * @param {'bakground'|'overlay'} property\n     * @param {(String|fabric.Pattern|fabric.Rect)} color Color or pattern or rect\n     * @param {Function} callback Callback to invoke when color is set\n     * @param {Object} options\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    __setBgOverlayColor: function (property, color, callback, options) {\n      var _this = this;\n      var cb = function () {\n        _this[property] = new fabric.Rect(\n          fabric.util.object.extend(\n            {\n              width: _this.width,\n              height: _this.height,\n              fill: _this[property],\n            },\n            options\n          )\n        );\n        callback && callback(_this[property]);\n      };\n\n      __setBgOverlayColor.call(this, property, color, cb);\n      //  invoke cb in case of gradient\n      //  see {@link CommonMethods#_initGradient}\n      if (color && color.colorStops && !(color instanceof fabric.Gradient)) {\n        cb();\n      }\n      return this;\n    },\n\n    /**\n     * patch serialization\n     * background/overlay properties could be objects if parsed by this mixin or could be legacy values\n     * @private\n     * @param {String} property Property to set (backgroundImage, overlayImage, backgroundColor, overlayColor)\n     * @param {(Object|String)} value Value to set\n     * @param {Object} loaded Set loaded property to true if property is set\n     * @param {Object} callback Callback function to invoke after property is set\n     */\n    __setBgOverlay: function (property, value, loaded, callback) {\n      var _this = this;\n\n      if (\n        (property === \"backgroundColor\" || property === \"overlayColor\") &&\n        value &&\n        typeof value === \"object\" &&\n        value.type === \"rect\"\n      ) {\n        fabric.util.enlivenObjects([value], function (enlivedObject) {\n          _this[property] = enlivedObject[0];\n          loaded[property] = true;\n          callback && callback();\n        });\n      } else {\n        ___setBgOverlay.call(this, property, value, loaded, callback);\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {string} property 'background' or 'overlay'\n     */\n    _renderBackgroundOrOverlay: function (ctx, property) {\n      var fill = this[property + \"Color\"],\n        object = this[property + \"Image\"],\n        v = this.viewportTransform,\n        needsVpt = this[property + \"Vpt\"];\n      if (!fill && !object) {\n        return;\n      }\n      if (fill || object) {\n        ctx.save();\n        if (needsVpt) {\n          ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n        }\n        fill && fill.render(ctx);\n        object && object.render(ctx);\n        ctx.restore();\n      }\n    },\n  });\n\n  var toObject = fabric.Object.prototype.toObject;\n  fabric.util.object.extend(fabric.Object.prototype, {\n    /**\n     * Indicates whether this object can be erased by {@link fabric.EraserBrush}\n     * @type boolean\n     * @default true\n     */\n    erasable: true,\n\n    /**\n     *\n     * @returns {fabric.Group | null}\n     */\n    getEraser: function () {\n      return this.clipPath && this.clipPath.eraser ? this.clipPath : null;\n    },\n\n    /**\n     * Returns an object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function (additionalProperties) {\n      return toObject.call(this, [\"erasable\"].concat(additionalProperties));\n    },\n  });\n\n  var groupToObject = fabric.Group.prototype.toObject;\n  fabric.util.object.extend(fabric.Group.prototype, {\n    /**\n     * Returns an object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function (additionalProperties) {\n      return groupToObject.call(this, [\"eraser\"].concat(additionalProperties));\n    },\n  });\n\n  fabric.util.object.extend(fabric.Canvas.prototype, {\n    /**\n     * Used by {@link #renderAll}\n     * @returns boolean\n     */\n    isErasing: function () {\n      return (\n        this.isDrawingMode &&\n        this.freeDrawingBrush &&\n        this.freeDrawingBrush.type === \"eraser\" &&\n        this.freeDrawingBrush._isErasing\n      );\n    },\n\n    /**\n     * While erasing, the brush is in charge of rendering the canvas\n     * It uses both layers to achieve diserd erasing effect\n     *\n     * @returns fabric.Canvas\n     */\n    renderAll: function () {\n      if (this.contextTopDirty && !this._groupSelector && !this.isDrawingMode) {\n        this.clearContext(this.contextTop);\n        this.contextTopDirty = false;\n      }\n      // while erasing the brush is in charge of rendering the canvas so we return\n      if (this.isErasing()) {\n        this.freeDrawingBrush._render();\n        return;\n      }\n      if (this.hasLostContext) {\n        this.renderTopLayer(this.contextTop);\n      }\n      var canvasToDrawOn = this.contextContainer;\n      this.renderCanvas(canvasToDrawOn, this._chooseObjectsToRender());\n      return this;\n    },\n  });\n\n  /**\n   * EraserBrush class\n   * Supports selective erasing meaning that only erasable objects are affected by the eraser brush.\n   * In order to support selective erasing all non erasable objects are rendered on the main/bottom ctx\n   * while the entire canvas is rendered on the top ctx.\n   * Canvas bakground/overlay image/color are handled as well.\n   * When erasing occurs, the path clips the top ctx and reveals the bottom ctx.\n   * This achieves the desired effect of seeming to erase only erasable objects.\n   * After erasing is done the created path is added to all intersected objects' `clipPath` property.\n   *\n   *\n   * @class fabric.EraserBrush\n   * @extends fabric.PencilBrush\n   */\n  fabric.EraserBrush = fabric.util.createClass(\n    fabric.PencilBrush,\n    /** @lends fabric.EraserBrush.prototype */ {\n      type: \"eraser\",\n\n      /**\n       * Indicates that the ctx is ready and rendering can begin.\n       * Used to prevent a race condition caused by {@link fabric.EraserBrush#onMouseMove} firing before {@link fabric.EraserBrush#onMouseDown} has completed\n       *\n       * @private\n       */\n      _ready: false,\n\n      /**\n       * @private\n       */\n      _drawOverlayOnTop: false,\n\n      /**\n       * @private\n       */\n      _isErasing: false,\n\n      initialize: function (canvas) {\n        this.callSuper(\"initialize\", canvas);\n        this._renderBound = this._render.bind(this);\n        this.render = this.render.bind(this);\n      },\n\n      /**\n       * @private\n       * @param {Function} callback\n       * @returns\n       */\n      forCanvasDrawables: function (callback) {\n        var _this = this;\n        callback.call(\n          _this,\n          \"background\",\n          \"backgroundImage\",\n          \"setBackgroundImage\",\n          \"backgroundColor\",\n          \"setBackgroundColor\"\n        );\n        callback.call(\n          _this,\n          \"overlay\",\n          \"overlayImage\",\n          \"setOverlayImage\",\n          \"overlayColor\",\n          \"setOverlayColor\"\n        );\n      },\n\n      /**\n       * Used to hide a drawable from the rendering process\n       * @param {fabric.Object} object\n       */\n      hideObject: function (object) {\n        if (object) {\n          object._originalOpacity = object.opacity;\n          object.set({ opacity: 0 });\n        }\n      },\n\n      /**\n       * Restores hiding an object\n       * {@link favric.EraserBrush#hideObject}\n       * @param {fabric.Object} object\n       */\n      restoreObjectVisibility: function (object) {\n        if (object && object._originalOpacity) {\n          object.set({ opacity: object._originalOpacity });\n          object._originalOpacity = undefined;\n        }\n      },\n\n      /**\n       * Drawing Logic For background drawables: (`backgroundImage`, `backgroundColor`)\n       * 1. if erasable = true:\n       *    we need to hide the drawable on the bottom ctx so when the brush is erasing it will clip the top ctx and reveal white space underneath\n       * 2. if erasable = false:\n       *    we need to draw the drawable only on the bottom ctx so the brush won't affect it\n       * @param {'bottom' | 'top' | 'overlay'} layer\n       */\n      prepareCanvasBackgroundForLayer: function (layer) {\n        if (layer === \"overlay\") {\n          return;\n        }\n        var canvas = this.canvas;\n        var image = canvas.get(\"backgroundImage\");\n        var color = canvas.get(\"backgroundColor\");\n        var erasablesOnLayer = layer === \"top\";\n        if (image && image.erasable === !erasablesOnLayer) {\n          this.hideObject(image);\n        }\n        if (color && color.erasable === !erasablesOnLayer) {\n          this.hideObject(color);\n        }\n      },\n\n      /**\n       * Drawing Logic For overlay drawables (`overlayImage`, `overlayColor`)\n       * We must draw on top ctx to be on top of visible canvas\n       * 1. if erasable = true:\n       *    we need to draw the drawable on the top ctx as a normal object\n       * 2. if erasable = false:\n       *    we need to draw the drawable on top of the brush,\n       *    this means we need to repaint for every stroke\n       *\n       * @param {'bottom' | 'top' | 'overlay'} layer\n       * @returns boolean render overlay above brush\n       */\n      prepareCanvasOverlayForLayer: function (layer) {\n        var canvas = this.canvas;\n        var image = canvas.get(\"overlayImage\");\n        var color = canvas.get(\"overlayColor\");\n        if (layer === \"bottom\") {\n          this.hideObject(image);\n          this.hideObject(color);\n          return false;\n        }\n        var erasablesOnLayer = layer === \"top\";\n        var renderOverlayOnTop =\n          (image && !image.erasable) || (color && !color.erasable);\n        if (image && image.erasable === !erasablesOnLayer) {\n          this.hideObject(image);\n        }\n        if (color && color.erasable === !erasablesOnLayer) {\n          this.hideObject(color);\n        }\n        return renderOverlayOnTop;\n      },\n\n      /**\n       * @private\n       */\n      restoreCanvasDrawables: function () {\n        var canvas = this.canvas;\n        this.restoreObjectVisibility(canvas.get(\"backgroundImage\"));\n        this.restoreObjectVisibility(canvas.get(\"backgroundColor\"));\n        this.restoreObjectVisibility(canvas.get(\"overlayImage\"));\n        this.restoreObjectVisibility(canvas.get(\"overlayColor\"));\n      },\n\n      /**\n       * @private\n       * This is designed to support erasing a group with both erasable and non-erasable objects.\n       * Iterates over collections to allow nested selective erasing.\n       * Used by {@link fabric.EraserBrush#prepareCanvasObjectsForLayer}\n       * to prepare the bottom layer by hiding erasable nested objects\n       *\n       * @param {fabric.Collection} collection\n       */\n      prepareCollectionTraversal: function (collection) {\n        var _this = this;\n        collection.forEachObject(function (obj) {\n          if (obj.forEachObject) {\n            _this.prepareCollectionTraversal(obj);\n          } else {\n            if (obj.erasable) {\n              _this.hideObject(obj);\n            }\n          }\n        });\n      },\n\n      /**\n       * @private\n       * Used by {@link fabric.EraserBrush#prepareCanvasObjectsForLayer}\n       * to reverse the action of {@link fabric.EraserBrush#prepareCollectionTraversal}\n       *\n       * @param {fabric.Collection} collection\n       */\n      restoreCollectionTraversal: function (collection) {\n        var _this = this;\n        collection.forEachObject(function (obj) {\n          if (obj.forEachObject) {\n            _this.restoreCollectionTraversal(obj);\n          } else {\n            _this.restoreObjectVisibility(obj);\n          }\n        });\n      },\n\n      /**\n       * @private\n       * This is designed to support erasing a group with both erasable and non-erasable objects.\n       *\n       * @param {'bottom' | 'top' | 'overlay'} layer\n       */\n      prepareCanvasObjectsForLayer: function (layer) {\n        if (layer !== \"bottom\") return;\n        this.prepareCollectionTraversal(this.canvas);\n      },\n\n      /**\n       * @private\n       * @param {'bottom' | 'top' | 'overlay'} layer\n       */\n      restoreCanvasObjectsFromLayer: function (layer) {\n        if (layer !== \"bottom\") return;\n        this.restoreCollectionTraversal(this.canvas);\n      },\n\n      /**\n       * @private\n       * @param {'bottom' | 'top' | 'overlay'} layer\n       * @returns boolean render overlay above brush\n       */\n      prepareCanvasForLayer: function (layer) {\n        this.prepareCanvasBackgroundForLayer(layer);\n        this.prepareCanvasObjectsForLayer(layer);\n        return this.prepareCanvasOverlayForLayer(layer);\n      },\n\n      /**\n       * @private\n       * @param {'bottom' | 'top' | 'overlay'} layer\n       */\n      restoreCanvasFromLayer: function (layer) {\n        this.restoreCanvasDrawables();\n        this.restoreCanvasObjectsFromLayer(layer);\n      },\n\n      /**\n       * Render all non-erasable objects on bottom layer with the exception of overlays to avoid being clipped by the brush.\n       * Groups are rendered for nested selective erasing, non-erasable objects are visible while erasable objects are not.\n       */\n      renderBottomLayer: function () {\n        var canvas = this.canvas;\n        this.prepareCanvasForLayer(\"bottom\");\n        canvas.renderCanvas(\n          canvas.getContext(),\n          canvas.getObjects().filter(function (obj) {\n            return !obj.erasable || obj.isType(\"group\");\n          })\n        );\n        this.restoreCanvasFromLayer(\"bottom\");\n      },\n\n      /**\n       * 1. Render all objects on top layer, erasable and non-erasable\n       *    This is important for cases such as overlapping objects, the background object erasable and the foreground object not erasable.\n       * 2. Render the brush\n       */\n      renderTopLayer: function () {\n        var canvas = this.canvas;\n        this._drawOverlayOnTop = this.prepareCanvasForLayer(\"top\");\n        canvas.renderCanvas(canvas.contextTop, canvas.getObjects());\n        this.callSuper(\"_render\");\n        this.restoreCanvasFromLayer(\"top\");\n      },\n\n      /**\n       * Render all non-erasable overlays on top of the brush so that they won't get erased\n       */\n      renderOverlay: function () {\n        this.prepareCanvasForLayer(\"overlay\");\n        var canvas = this.canvas;\n        var ctx = canvas.contextTop;\n        this._saveAndTransform(ctx);\n        canvas._renderOverlay(ctx);\n        ctx.restore();\n        this.restoreCanvasFromLayer(\"overlay\");\n      },\n\n      /**\n       * @extends @class fabric.BaseBrush\n       * @param {CanvasRenderingContext2D} ctx\n       */\n      _saveAndTransform: function (ctx) {\n        this.callSuper(\"_saveAndTransform\", ctx);\n        ctx.globalCompositeOperation = \"destination-out\";\n      },\n\n      /**\n       * We indicate {@link fabric.PencilBrush} to repaint itself if necessary\n       * @returns\n       */\n      needsFullRender: function () {\n        return this.callSuper(\"needsFullRender\") || this._drawOverlayOnTop;\n      },\n\n      /**\n       *\n       * @param {fabric.Point} pointer\n       * @param {fabric.IEvent} options\n       * @returns\n       */\n      onMouseDown: function (pointer, options) {\n        if (!this.canvas._isMainEvent(options.e)) {\n          return;\n        }\n        this._prepareForDrawing(pointer);\n        // capture coordinates immediately\n        // this allows to draw dots (when movement never occurs)\n        this._captureDrawingPath(pointer);\n\n        this._isErasing = true;\n        this.canvas.fire(\"erasing:start\");\n        this._ready = true;\n        this._render();\n      },\n\n      /**\n       * Rendering is done in 4 steps:\n       * 1. Draw all non-erasable objects on bottom ctx with the exception of overlays {@link fabric.EraserBrush#renderBottomLayer}\n       * 2. Draw all objects on top ctx including erasable drawables {@link fabric.EraserBrush#renderTopLayer}\n       * 3. Draw eraser {@link fabric.PencilBrush#_render} at {@link fabric.EraserBrush#renderTopLayer}\n       * 4. Draw non-erasable overlays {@link fabric.EraserBrush#renderOverlay}\n       *\n       * @param {fabric.Canvas} canvas\n       */\n      _render: function () {\n        if (!this._ready) {\n          return;\n        }\n        this.isRendering = 1;\n        this.renderBottomLayer();\n        this.renderTopLayer();\n        this.renderOverlay();\n        this.isRendering = 0;\n      },\n\n      /**\n       * @public\n       */\n      render: function () {\n        if (this._isErasing) {\n          if (this.isRendering) {\n            this.isRendering = fabric.util.requestAnimFrame(this._renderBound);\n          } else {\n            this._render();\n          }\n          return true;\n        }\n        return false;\n      },\n\n      /**\n       * Adds path to existing clipPath of object\n       *\n       * @param {fabric.Object} obj\n       * @param {fabric.Path} path\n       */\n      _addPathToObjectEraser: function (obj, path) {\n        var clipObject;\n        var _this = this;\n        //  object is collection, i.e group\n        if (obj.forEachObject) {\n          obj.forEachObject(function (_obj) {\n            if (_obj.erasable) {\n              _this._addPathToObjectEraser(_obj, path);\n            }\n          });\n          return;\n        }\n        if (!obj.getEraser()) {\n          var rect = new fabric.Rect({\n            width: obj.width,\n            height: obj.height,\n            clipPath: obj.clipPath,\n            originX: \"center\",\n            originY: \"center\",\n          });\n          var objects = [rect];\n          clipObject = new fabric.Group(objects, {\n            boundingObjects: objects,\n            eraser: true,\n          });\n        } else {\n          clipObject = obj.clipPath;\n        }\n\n        path.clone(function (path) {\n          path.globalCompositeOperation = \"destination-out\";\n          // http://fabricjs.com/using-transformations\n          var desiredTransform = fabric.util.multiplyTransformMatrices(\n            fabric.util.invertTransform(obj.calcTransformMatrix()),\n            path.calcTransformMatrix()\n          );\n          fabric.util.applyTransformToObject(path, desiredTransform);\n          clipObject.addWithUpdate(path);\n          obj.set({\n            clipPath: clipObject,\n            dirty: true,\n          });\n        });\n      },\n\n      /**\n       * Add the eraser path to canvas drawables' clip paths\n       *\n       * @param {fabric.Canvas} source\n       * @param {fabric.Canvas} path\n       */\n      applyEraserToCanvas: function (path) {\n        var canvas = this.canvas;\n        this.forCanvasDrawables(function (drawable, imgProp, _, colorProp) {\n          var sourceImage = canvas.get(imgProp);\n          var sourceColor = canvas.get(colorProp);\n          if (sourceImage && sourceImage.erasable) {\n            this._addPathToObjectEraser(sourceImage, path);\n          }\n          if (sourceColor && sourceColor.erasable) {\n            this._addPathToObjectEraser(sourceColor, path);\n          }\n        });\n      },\n\n      /**\n       * On mouseup after drawing the path on contextTop canvas\n       * we use the points captured to create an new fabric path object\n       * and add it to every intersected erasable object.\n       */\n      _finalizeAndAddPath: function () {\n        var ctx = this.canvas.contextTop,\n          canvas = this.canvas;\n        ctx.closePath();\n        if (this.decimate) {\n          this._points = this.decimatePoints(this._points, this.decimate);\n        }\n\n        // clear\n        canvas.clearContext(canvas.contextTop);\n        this._isErasing = false;\n\n        var pathData =\n          this._points && this._points.length > 1\n            ? this.convertPointsToSVGPath(this._points).join(\"\")\n            : \"M 0 0 Q 0 0 0 0 L 0 0\";\n        if (pathData === \"M 0 0 Q 0 0 0 0 L 0 0\") {\n          canvas.fire(\"erasing:end\");\n          // do not create 0 width/height paths, as they are\n          // rendered inconsistently across browsers\n          // Firefox 4, for example, renders a dot,\n          // whereas Chrome 10 renders nothing\n          canvas.requestRenderAll();\n          return;\n        }\n\n        var path = this.createPath(pathData);\n        canvas.fire(\"before:path:created\", { path: path });\n\n        // finalize erasing\n        this.applyEraserToCanvas(path);\n        var _this = this;\n        canvas.forEachObject(function (obj) {\n          if (obj.erasable && obj.intersectsWithObject(path)) {\n            _this._addPathToObjectEraser(obj, path);\n          }\n        });\n\n        canvas.fire(\"erasing:end\");\n\n        canvas.requestRenderAll();\n        path.setCoords();\n        this._resetShadow();\n\n        // fire event 'path' created\n        canvas.fire(\"path:created\", { path: path });\n      },\n    }\n  );\n})();\n","import React, { useState, useRef, useEffect } from 'react';\nimport { fabric } from 'fabric';\nimport { FileUpload } from 'primereact/fileupload';\nimport { Button } from 'primereact/button';\nimport { Checkbox } from 'primereact/checkbox';\n\nimport './eraserBrush';\n\nimport styles from './index.module.scss';\n\nconst chooseOptions = {\n  icon: 'pi pi-fw pi-plus',\n  iconOnly: false,\n  className: 'custom-upload-btn p-button-info p-button-rounded p-button-outlined',\n};\n\nlet drawInstance = null;\nlet origX;\nlet origY;\nlet mouseDown = false;\n\nconst options = {\n  currentMode: '',\n  currentColor: '#000000',\n  currentWidth: 5,\n  fill: false,\n  group: {},\n};\n\nconst modes = {\n  RECTANGLE: 'RECTANGLE',\n  TRIANGLE: 'TRIANGLE',\n  ELLIPSE: 'ELLIPSE',\n  LINE: 'LINE',\n  PENCIL: 'PENCIL',\n};\n\nconst initCanvas = () =>\n  new fabric.Canvas('canvas', {\n    height: 600,\n    width: 800,\n  });\n\n/*  ==== line  ==== */\nconst createLine = (canvas) => {\n  if (modes.currentMode !== modes.LINE) {\n    options.currentMode = modes.LINE;\n\n    canvas.off('mouse:down');\n    canvas.off('mouse:move');\n    canvas.off('mouse:up');\n\n    canvas.on('mouse:down', startAddLine(canvas));\n    canvas.on('mouse:move', startDrawingLine(canvas));\n    canvas.on('mouse:up', stopDrawingLine);\n\n    canvas.selection = false;\n    canvas.hoverCursor = 'auto';\n    canvas.isDrawingMode = false;\n    canvas.getObjects().map((item) => item.set({ selectable: false }));\n    canvas.discardActiveObject().requestRenderAll();\n  }\n};\n\nconst startAddLine = (canvas) => {\n  return ({ e }) => {\n    mouseDown = true;\n\n    let pointer = canvas.getPointer(e);\n    drawInstance = new fabric.Line([pointer.x, pointer.y, pointer.x, pointer.y], {\n      strokeWidth: options.currentWidth,\n      stroke: options.currentColor,\n      selectable: false,\n    });\n\n    canvas.add(drawInstance);\n    canvas.requestRenderAll();\n  };\n};\n\nconst startDrawingLine = (canvas) => {\n  return ({ e }) => {\n    if (mouseDown) {\n      const pointer = canvas.getPointer(e);\n      drawInstance.set({\n        x2: pointer.x,\n        y2: pointer.y,\n      });\n      drawInstance.setCoords();\n      canvas.requestRenderAll();\n    }\n  };\n};\nconst stopDrawingLine = () => {\n  mouseDown = false;\n};\n\n/* ==== rectangle ==== */\nconst createRect = (canvas) => {\n  if (options.currentMode !== modes.RECTANGLE) {\n    options.currentMode = modes.RECTANGLE;\n\n    canvas.off('mouse:down');\n    canvas.off('mouse:move');\n    canvas.off('mouse:up');\n\n    canvas.on('mouse:down', startAddRect(canvas));\n    canvas.on('mouse:move', startDrawingRect(canvas));\n    canvas.on('mouse:up', stopDrawingRect);\n\n    canvas.selection = false;\n    canvas.hoverCursor = 'auto';\n    canvas.isDrawingMode = false;\n    canvas.getObjects().map((item) => item.set({ selectable: false }));\n    canvas.discardActiveObject().requestRenderAll();\n  }\n};\n\nconst startAddRect = (canvas) => {\n  return ({ e }) => {\n    mouseDown = true;\n\n    const pointer = canvas.getPointer(e);\n    origX = pointer.x;\n    origY = pointer.y;\n\n    drawInstance = new fabric.Rect({\n      stroke: options.currentColor,\n      strokeWidth: options.currentWidth,\n      fill: options.fill ? options.currentColor : 'transparent',\n      left: origX,\n      top: origY,\n      width: 0,\n      height: 0,\n      selectionBackgroundColor: 'rgba(245, 245, 220, 0.5)',\n      selectable: false,\n    });\n\n    canvas.add(drawInstance);\n  };\n};\n\nconst startDrawingRect = (canvas) => {\n  return ({ e }) => {\n    if (mouseDown) {\n      const pointer = canvas.getPointer(e);\n\n      if (pointer.x < origX) {\n        drawInstance.set('left', pointer.x);\n      }\n      if (pointer.y < origY) {\n        drawInstance.set('top', pointer.y);\n      }\n      drawInstance.set({\n        width: Math.abs(pointer.x - origX),\n        height: Math.abs(pointer.y - origY),\n      });\n      drawInstance.setCoords();\n      canvas.renderAll();\n    }\n  };\n};\n\nconst stopDrawingRect = () => {\n  mouseDown = false;\n};\n\n/* ==== Ellipse ==== */\nconst createEllipse = (canvas) => {\n  if (options.currentMode !== modes.ELLIPSE) {\n    options.currentMode = modes.ELLIPSE;\n\n    canvas.off('mouse:down');\n    canvas.off('mouse:move');\n    canvas.off('mouse:up');\n\n    canvas.on('mouse:down', startAddEllipse(canvas));\n    canvas.on('mouse:move', startDrawingEllipse(canvas));\n    canvas.on('mouse:up', stopDrawingEllipse);\n\n    canvas.selection = false;\n    canvas.hoverCursor = 'auto';\n    canvas.isDrawingMode = false;\n    canvas.getObjects().map((item) => item.set({ selectable: false }));\n    canvas.discardActiveObject().requestRenderAll();\n  }\n};\n\nconst startAddEllipse = (canvas) => {\n  return ({ e }) => {\n    mouseDown = true;\n\n    const pointer = canvas.getPointer(e);\n    origX = pointer.x;\n    origY = pointer.y;\n    drawInstance = new fabric.Ellipse({\n      stroke: options.currentColor,\n      strokeWidth: options.currentWidth,\n      fill: options.fill ? options.currentColor : 'transparent',\n      left: origX,\n      top: origY,\n      cornerSize: 7,\n      objectCaching: false,\n      selectionBackgroundColor: 'rgba(245, 245, 220, 0.5)',\n      selectable: false,\n    });\n\n    canvas.add(drawInstance);\n  };\n};\n\nconst startDrawingEllipse = (canvas) => {\n  return ({ e }) => {\n    if (mouseDown) {\n      const pointer = canvas.getPointer(e);\n      if (pointer.x < origX) {\n        drawInstance.set('left', pointer.x);\n      }\n      if (pointer.y < origY) {\n        drawInstance.set('top', pointer.y);\n      }\n      drawInstance.set({\n        rx: Math.abs(pointer.x - origX) / 2,\n        ry: Math.abs(pointer.y - origY) / 2,\n      });\n      drawInstance.setCoords();\n      canvas.renderAll();\n    }\n  };\n};\n\nconst stopDrawingEllipse = () => {\n  mouseDown = false;\n};\n\n/* === triangle === */\nconst createTriangle = (canvas) => {\n  canvas.off('mouse:down');\n  canvas.off('mouse:move');\n  canvas.off('mouse:up');\n\n  canvas.on('mouse:down', startAddTriangle(canvas));\n  canvas.on('mouse:move', startDrawingTriangle(canvas));\n  canvas.on('mouse:up', stopDrawingTriangle);\n\n  canvas.selection = false;\n  canvas.hoverCursor = 'auto';\n  canvas.isDrawingMode = false;\n  canvas.getObjects().map((item) => item.set({ selectable: false }));\n  canvas.discardActiveObject().requestRenderAll();\n};\n\nconst startAddTriangle = (canvas) => {\n  return ({ e }) => {\n    mouseDown = true;\n    options.currentMode = modes.TRIANGLE;\n\n    const pointer = canvas.getPointer(e);\n    origX = pointer.x;\n    origY = pointer.y;\n    drawInstance = new fabric.Triangle({\n      stroke: options.currentColor,\n      strokeWidth: options.currentWidth,\n      fill: options.fill ? options.currentColor : 'transparent',\n      left: origX,\n      top: origY,\n      width: 0,\n      height: 0,\n      selectionBackgroundColor: 'rgba(245, 245, 220, 0.5)',\n      selectable: false,\n    });\n\n    canvas.add(drawInstance);\n  };\n};\n\nconst startDrawingTriangle = (canvas) => {\n  return ({ e }) => {\n    if (mouseDown) {\n      const pointer = canvas.getPointer(e);\n      if (pointer.x < origX) {\n        drawInstance.set('left', pointer.x);\n      }\n      if (pointer.y < origY) {\n        drawInstance.set('top', pointer.y);\n      }\n      drawInstance.set({\n        width: Math.abs(pointer.x - origX),\n        height: Math.abs(pointer.y - origY),\n      });\n      drawInstance.setCoords();\n      canvas.renderAll();\n    }\n  };\n};\n\nconst stopDrawingTriangle = () => {\n  mouseDown = false;\n};\n\nconst createText = (canvas) => {\n  canvas.isDrawingMode = false;\n  const text = new fabric.Textbox('text', {\n    left: 100,\n    top: 100,\n    fill: options.currentColor,\n    editable: true,\n  });\n\n  canvas.add(text);\n  canvas.renderAll();\n};\n\nconst changeToErasingMode = (canvas) => {\n  canvas.freeDrawingBrush = new fabric.EraserBrush(canvas);\n  canvas.freeDrawingBrush.width = options.currentWidth;\n  canvas.isDrawingMode = true;\n};\n\nconst clearCanvas = (canvas) => {\n  canvas.getObjects().forEach((item) => {\n    if (item !== canvas.backgroundImage) {\n      canvas.remove(item);\n    }\n  });\n};\n\nconst createBackgroundImage = (imageUrl, canvas) => {\n  fabric.Image.fromURL(imageUrl, (img) => {\n    img.scaleToWidth(canvas.width);\n    img.scaleToHeight(canvas.height);\n    canvas.setBackgroundImage(img);\n    canvas.renderAll();\n  });\n};\n\nconst canvasFromJson = (canvas) => {\n  const data = JSON.parse(\n    '{\"version\":\"4.3.1\",\"objects\":[{\"type\":\"circle\",\"version\":\"4.3.1\",\"originX\":\"left\",\"originY\":\"top\",\"left\":100,\"top\":100,\"width\":40,\"height\":40,\"fill\":\"rgba(255, 255, 255, 0.0)\",\"stroke\":\"#000000\",\"strokeWidth\":1,\"strokeDashArray\":null,\"strokeLineCap\":\"butt\",\"strokeDashOffset\":0,\"strokeLineJoin\":\"miter\",\"strokeUniform\":false,\"strokeMiterLimit\":4,\"scaleX\":1,\"scaleY\":1,\"angle\":0,\"flipX\":false,\"flipY\":false,\"opacity\":1,\"shadow\":null,\"visible\":true,\"backgroundColor\":\"\",\"fillRule\":\"nonzero\",\"paintFirst\":\"fill\",\"globalCompositeOperation\":\"source-over\",\"skewX\":0,\"skewY\":0,\"radius\":20,\"startAngle\":0,\"endAngle\":6.283185307179586},{\"type\":\"text\",\"version\":\"4.3.1\",\"originX\":\"left\",\"originY\":\"top\",\"left\":253,\"top\":102,\"width\":95.55,\"height\":18.08,\"fill\":\"#000000\",\"stroke\":null,\"strokeWidth\":1,\"strokeDashArray\":null,\"strokeLineCap\":\"butt\",\"strokeDashOffset\":0,\"strokeLineJoin\":\"miter\",\"strokeUniform\":false,\"strokeMiterLimit\":4,\"scaleX\":2.43,\"scaleY\":2.43,\"angle\":0,\"flipX\":false,\"flipY\":false,\"opacity\":1,\"shadow\":null,\"visible\":true,\"backgroundColor\":\"\",\"fillRule\":\"nonzero\",\"paintFirst\":\"fill\",\"globalCompositeOperation\":\"source-over\",\"skewX\":0,\"skewY\":0,\"text\":\"Some text\",\"fontSize\":16,\"fontWeight\":\"normal\",\"fontFamily\":\"Arial\",\"fontStyle\":\"normal\",\"lineHeight\":1.16,\"underline\":false,\"overline\":false,\"linethrough\":false,\"textAlign\":\"left\",\"textBackgroundColor\":\"\",\"charSpacing\":0,\"minWidth\":20,\"splitByGrapheme\":false,\"styles\":{}},{\"type\":\"rect\",\"version\":\"4.3.1\",\"originX\":\"left\",\"originY\":\"top\",\"left\":109,\"top\":212,\"width\":40,\"height\":40,\"fill\":\"rgba(255, 255, 255, 0.0)\",\"stroke\":\"#000000\",\"strokeWidth\":1,\"strokeDashArray\":null,\"strokeLineCap\":\"butt\",\"strokeDashOffset\":0,\"strokeLineJoin\":\"miter\",\"strokeUniform\":false,\"strokeMiterLimit\":4,\"scaleX\":1,\"scaleY\":1,\"angle\":0,\"flipX\":false,\"flipY\":false,\"opacity\":1,\"shadow\":null,\"visible\":true,\"backgroundColor\":\"\",\"fillRule\":\"nonzero\",\"paintFirst\":\"fill\",\"globalCompositeOperation\":\"source-over\",\"skewX\":0,\"skewY\":0,\"rx\":0,\"ry\":0},{\"type\":\"image\",\"version\":\"4.3.1\",\"originX\":\"left\",\"originY\":\"top\",\"left\":499,\"top\":86,\"width\":1200,\"height\":900,\"fill\":\"rgb(0,0,0)\",\"stroke\":null,\"strokeWidth\":0,\"strokeDashArray\":null,\"strokeLineCap\":\"butt\",\"strokeDashOffset\":0,\"strokeLineJoin\":\"miter\",\"strokeUniform\":false,\"strokeMiterLimit\":4,\"scaleX\":0.2,\"scaleY\":0.2,\"angle\":0,\"flipX\":false,\"flipY\":false,\"opacity\":1,\"shadow\":null,\"visible\":true,\"backgroundColor\":\"\",\"fillRule\":\"nonzero\",\"paintFirst\":\"fill\",\"globalCompositeOperation\":\"source-over\",\"skewX\":0,\"skewY\":0,\"cropX\":0,\"cropY\":0,\"src\":\"https://miro.medium.com/max/1200/1*mk1-6aYaf_Bes1E3Imhc0A.jpeg\",\"crossOrigin\":null,\"filters\":[]},{\"type\":\"polyline\",\"version\":\"4.3.1\",\"originX\":\"left\",\"originY\":\"top\",\"left\":483.78,\"top\":339.22,\"width\":50.88,\"height\":50.88,\"fill\":\"white\",\"stroke\":\"black\",\"strokeWidth\":2,\"strokeDashArray\":null,\"strokeLineCap\":\"butt\",\"strokeDashOffset\":0,\"strokeLineJoin\":\"miter\",\"strokeUniform\":false,\"strokeMiterLimit\":4,\"scaleX\":1,\"scaleY\":1,\"angle\":262.52,\"flipX\":false,\"flipY\":false,\"opacity\":1,\"shadow\":null,\"visible\":true,\"backgroundColor\":\"\",\"fillRule\":\"nonzero\",\"paintFirst\":\"fill\",\"globalCompositeOperation\":\"source-over\",\"skewX\":0,\"skewY\":0,\"points\":[{\"x\":100,\"y\":100},{\"x\":99.11611652351681,\"y\":100.88388347648318},{\"x\":145.58058261758407,\"y\":147.34834957055045},{\"x\":142.92893218813452,\"y\":150},{\"x\":150,\"y\":150},{\"x\":150,\"y\":142.92893218813452},{\"x\":147.34834957055045,\"y\":145.58058261758407},{\"x\":100.88388347648318,\"y\":99.11611652351681},{\"x\":100,\"y\":100}]},{\"type\":\"image\",\"version\":\"4.3.1\",\"originX\":\"left\",\"originY\":\"top\",\"left\":197,\"top\":132,\"width\":1200,\"height\":900,\"fill\":\"rgb(0,0,0)\",\"stroke\":null,\"strokeWidth\":0,\"strokeDashArray\":null,\"strokeLineCap\":\"butt\",\"strokeDashOffset\":0,\"strokeLineJoin\":\"miter\",\"strokeUniform\":false,\"strokeMiterLimit\":4,\"scaleX\":0.2,\"scaleY\":0.2,\"angle\":0,\"flipX\":false,\"flipY\":false,\"opacity\":1,\"shadow\":null,\"visible\":true,\"backgroundColor\":\"\",\"fillRule\":\"nonzero\",\"paintFirst\":\"fill\",\"globalCompositeOperation\":\"source-over\",\"skewX\":0,\"skewY\":0,\"cropX\":0,\"cropY\":0,\"src\":\"https://miro.medium.com/max/1200/1*mk1-6aYaf_Bes1E3Imhc0A.jpeg\",\"crossOrigin\":null,\"filters\":[]}]}'\n  );\n  canvas.loadFromJSON(data);\n  canvas.requestRenderAll();\n};\n\nconst canvasToJson = (canvas) => {\n  alert(JSON.stringify(canvas.toJSON()));\n};\n\nconst draw = (canvas) => {\n  if (options.currentMode !== modes.PENCIL) {\n    canvas.off('mouse:down');\n    canvas.off('mouse:move');\n    canvas.off('mouse:up');\n\n    options.currentMode = modes.PENCIL;\n    canvas.freeDrawingBrush = new fabric.PencilBrush(canvas);\n    canvas.freeDrawingBrush.width = options.currentWidth;\n    canvas.isDrawingMode = true;\n  }\n};\n\nconst Whiteboard = () => {\n  const [canvas, setCanvas] = useState(null);\n  const [canvasJSON, setCanvasJSON] = useState(null);\n  const [isFill, setIsFill] = useState(false);\n  const fileUploadRef = useRef(null);\n\n  useEffect(() => {\n    setCanvas(() => initCanvas());\n  }, []);\n\n  useEffect(() => {\n    if (canvas) {\n      addCanvasEventListeners(canvas);\n      canvas.loadFromJSON(canvasJSON);\n      canvas.renderAll();\n    }\n  }, [canvas]);\n\n  const addCanvasEventListeners = (canvas) => {\n    canvas.on('mouse:up', (event) => {\n      const data = JSON.stringify(canvas.toJSON());\n    });\n  };\n\n  const uploadImage = (e) => {\n    const reader = new FileReader();\n    const file = e.files[0];\n\n    reader.addEventListener('load', () => {\n      fabric.Image.fromURL(reader.result, (img) => {\n        canvas.add(img);\n      });\n    });\n\n    reader.readAsDataURL(file);\n  };\n\n  const uploadPdf = () => {};\n\n  const changeCurrentWidth = (e) => {\n    options.currentWidth = parseInt(e.target.value);\n    canvas.freeDrawingBrush.width = parseInt(e.target.value);\n  };\n\n  const changeCurrentColor = (e) => {\n    options.currentColor = e.target.value;\n    canvas.freeDrawingBrush.color = e.target.value;\n  };\n\n  const changeFill = (e) => {\n    console.log(e);\n    options.fill = e.checked;\n    setIsFill(() => e.checked);\n  };\n\n  return (\n    <div className={styles.whiteboard}>\n      <div className={styles.toolbar}>\n        <Button\n          label=\"line\"\n          className=\"p-button-info p-button-rounded p-button-outlined\"\n          onClick={() => createLine(canvas)}\n        />\n        <Button\n          label=\"rectangle\"\n          className=\"p-button-info p-button-rounded p-button-outlined\"\n          onClick={() => createRect(canvas)}\n        />\n        <Button\n          label=\"ellipse\"\n          className=\"p-button-info p-button-rounded p-button-outlined\"\n          onClick={() => createEllipse(canvas)}\n        />\n        <Button\n          label=\"triangle\"\n          className=\"p-button-info p-button-rounded p-button-outlined\"\n          onClick={() => createTriangle(canvas, options)}\n        />\n        <Button\n          label=\"image\"\n          className=\"p-button-info p-button-rounded p-button-outlined\"\n          onClick={() => createBackgroundImage('https://i.imgur.com/MFdYlTH.png', canvas)}\n        />\n        <Button\n          label=\"pencil\"\n          className=\"p-button-info p-button-rounded p-button-outlined\"\n          onClick={() => draw(canvas)}\n        />\n        <Button\n          label=\"eraser\"\n          className=\"p-button-info p-button-rounded p-button-outlined\"\n          onClick={() => changeToErasingMode(canvas)}\n        />\n        <Button\n          label=\"text\"\n          className=\"p-button-info p-button-rounded p-button-outlined\"\n          onClick={() => createText(canvas)}\n        />\n        <input\n          className=\"p-button-info p-button-rounded p-button-outlined\"\n          type=\"color\"\n          onChange={changeCurrentColor}\n        />\n        <input type=\"range\" min={1} max={20} step={1} onChange={changeCurrentWidth} />\n        <Checkbox id=\"fill\" checked={isFill} onChange={changeFill} />\n        <label htmlFor=\"fill\">fill</label>\n        <Button\n          label=\"clear all\"\n          className=\"p-button-info p-button-rounded p-button-outlined\"\n          onClick={() => clearCanvas(canvas)}\n        />\n        <Button\n          label=\"To Json\"\n          className=\"p-button-info p-button-rounded p-button-outlined\"\n          onClick={() => canvasToJson(canvas)}\n        />\n        <Button\n          label=\"From Json\"\n          className=\"p-button-info p-button-rounded p-button-outlined\"\n          onClick={() => canvasFromJson(canvas)}\n        />\n        <FileUpload\n          ref={fileUploadRef}\n          multiple={false}\n          name=\"demo[]\"\n          url=\"https://primefaces.org/primereact/showcase/upload.php\"\n          onUpload={uploadImage}\n          accept=\"image/*\"\n          chooseOptions={chooseOptions}\n          mode=\"basic\"\n          auto\n          chooseLabel=\"Upload Image\"\n        />\n        <FileUpload\n          ref={fileUploadRef}\n          multiple={false}\n          name=\"demo[]\"\n          url=\"https://primefaces.org/primereact/showcase/upload.php\"\n          onUpload={uploadPdf}\n          accept=\".pdf\"\n          chooseOptions={chooseOptions}\n          mode=\"basic\"\n          chooseLabel=\"Upload PDF\"\n        />\n      </div>\n      <canvas id=\"canvas\" />\n    </div>\n  );\n};\n\nexport default Whiteboard;\n","import React from 'react';\nimport Whiteboard from './components/WhiteBoard';\n\nimport styles from './app.module.scss';\n\nconst App = () => {\n  return (\n    <div className={styles.app}>\n      <Whiteboard />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './plugins';\nimport App from './App';\n\nimport './index.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}