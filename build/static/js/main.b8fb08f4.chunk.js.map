{"version":3,"sources":["App.js","index.js","app.module.scss"],"names":["currentMode","isMousePressed","currentColor","currentWidth","group","clearCanvas","canvas","getObjects","forEach","item","backgroundImage","remove","groupObjects","shouldGroup","objects","value","fabric","Group","add","destroy","oldGroup","requestRenderAll","App","useState","setCanvas","useEffect","Canvas","height","width","selection","on","event","setCursor","isDrawingMode","freeDrawingBrush","color","addCanvasEventListeners","className","styles","app","onClick","rect","Rect","top","left","fill","objectCaching","data","console","log","createRect","circle","Circle","radius","cornerSize","createCircle","triangle","Triangle","createTriangle","url","Image","fromURL","img","createBackgroundImage","type","onChange","e","target","min","max","id","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.b8fb08f4.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { fabric } from \"fabric\";\n\nimport styles from \"./app.module.scss\";\n\nlet isMousePressed = false;\nlet currentMode;\nlet currentColor = \"#000000\";\nlet currentWidth = 1;\nlet group = {};\n\nconst initCanvas = () =>\n  new fabric.Canvas(\"canvas\", {\n    height: 500,\n    width: 500,\n    selection: false,\n  });\n\nconst createBackgroundImage = (url, canvas) => {\n  fabric.Image.fromURL(\n    url,\n    (img) => {\n      // img.scale(0.3);\n      canvas.add(img);\n    },\n    {\n      top: 0,\n      left: 0,\n      cornerSize: 7,\n    }\n  );\n  canvas.requestRenderAll();\n};\n\nfunction createRect(canvas) {\n  const rect = new fabric.Rect({\n    top: 100,\n    left: 100,\n    width: 60,\n    height: 70,\n    fill: currentColor,\n    objectCaching: false,\n  });\n\n  rect.on(\"selected\", (data) => {\n    console.log(\"選中了\", data);\n  });\n\n  canvas.add(rect);\n  canvas.requestRenderAll();\n}\n\nfunction createCircle(canvas) {\n  const circle = new fabric.Circle({\n    top: 200,\n    left: 200,\n    radius: 50,\n    fill: currentColor,\n    cornerSize: 7,\n    objectCaching: false,\n  });\n\n  canvas.add(circle);\n  canvas.requestRenderAll();\n}\n\nfunction createTriangle(canvas) {\n  const triangle = new fabric.Triangle({\n    top: 400,\n    left: 300,\n    width: 50,\n    height: 70,\n    fill: currentColor,\n    cornerSize: 7,\n    objectCaching: false,\n  });\n\n  canvas.add(triangle);\n  canvas.requestRenderAll();\n}\n\nconst addCanvasEventListeners = (canvas) => {\n  canvas.on(\"mouse:down\", (event) => {\n    isMousePressed = true;\n\n    if (currentMode === \"pencil\") {\n      canvas.setCursor(\"crosshair\");\n      canvas.requestRenderAll();\n    }\n  });\n\n  canvas.on(\"mouse:move\", (event) => {\n    if (isMousePressed && currentMode === \"pencil\") {\n      canvas.isDrawingMode = true;\n      canvas.freeDrawingBrush.color = currentColor;\n      canvas.freeDrawingBrush.width = currentWidth;\n\n      canvas.requestRenderAll();\n    }\n  });\n\n  canvas.on(\"mouse:up\", (event) => {\n    isMousePressed = false;\n    canvas.setCursor(\"default\");\n    canvas.requestRenderAll();\n  });\n};\n\nconst toggleMode = (mode) => {\n  currentMode = mode;\n};\n\nconst clearCanvas = (canvas) => {\n  canvas.getObjects().forEach((item) => {\n    if (item !== canvas.backgroundImage) {\n      canvas.remove(item);\n    }\n  });\n};\n\nconst groupObjects = (canvas, group, shouldGroup) => {\n  if (shouldGroup) {\n    const objects = canvas.getObjects();\n    group.value = new fabric.Group(objects);\n    clearCanvas(canvas); // 先清除先前的，否則會重複出現兩組\n\n    canvas.add(group.value);\n  } else {\n    if (group.value) {\n      group.value.destroy();\n      const oldGroup = group.value.getObjects();\n      canvas.remove(group.value);\n      canvas.add(...oldGroup);\n      group.value = null;\n      canvas.requestRenderAll();\n    }\n  }\n};\n\nconst App = () => {\n  const [canvas, setCanvas] = useState(\"\");\n  useEffect(() => {\n    setCanvas(initCanvas());\n  }, []);\n\n  useEffect(() => {\n    if (canvas) {\n      addCanvasEventListeners(canvas);\n    }\n  }, [canvas]);\n\n  return (\n    <div className={styles.app}>\n      <button onClick={() => createRect(canvas)}>rectangle</button>\n      <button onClick={() => createCircle(canvas)}>circle</button>\n      <button onClick={() => createTriangle(canvas)}>triangle</button>\n      <button\n        onClick={() =>\n          createBackgroundImage(\"https://i.imgur.com/MFdYlTH.png\", canvas)\n        }\n      >\n        image\n      </button>\n      <button onClick={() => toggleMode(\"pencil\")}>pencil</button>\n      <input type=\"color\" onChange={(e) => (currentColor = e.target.value)} />\n      <input\n        type=\"range\"\n        min={1}\n        max={20}\n        onChange={(e) => (currentWidth = e.target.value)}\n      />\n      <button onClick={() => clearCanvas(canvas)}>clear all</button>\n      <button onClick={() => groupObjects(canvas, group, true)}>\n        group all objects\n      </button>\n      <button onClick={() => groupObjects(canvas, group, false)}>\n        ungroup\n      </button>\n      <canvas id=\"canvas\"></canvas>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport \"./index.scss\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"app_app__3mk8F\",\"canvas\":\"app_canvas__1LfB-\"};"],"sourceRoot":""}