{"version":3,"sources":["app.module.scss","App.js","index.js"],"names":["module","exports","currentMode","isMousePressed","currentColor","currentWidth","App","useState","canvas","setCanvas","useEffect","fabric","Canvas","height","width","selection","on","event","setCursor","renderAll","freeDrawingBrush","color","isDrawingMode","addCanvasEventListeners","className","styles","app","onClick","rect","Rect","top","left","fill","data","console","log","add","createRect","circle","Circle","radius","cornerSize","createCircle","triangle","Triangle","createTriangle","url","Image","fromURL","img","createBackgroundImage","type","onChange","e","target","value","min","max","getObjects","forEach","item","backgroundImage","remove","clearCanvas","id","ReactDOM","render","document","getElementById"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,IAAM,iBAAiB,OAAS,sB,qHCK9CC,E,4DADAC,GAAiB,EAEjBC,EAAe,UACfC,EAAe,EAqEnB,IA6EeC,EAtCH,WACV,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KAWA,OAVAC,qBAAU,WACRD,EA5GF,IAAIE,SAAOC,OAAO,SAAU,CAC1BC,OAAQ,IACRC,MAAO,IACPC,WAAW,OA0GV,IAEHL,qBAAU,WACJF,GA9CwB,SAACA,GAC/BA,EAAOQ,GAAG,cAAc,SAACC,GACvBd,GAAiB,EAEG,WAAhBD,IACFM,EAAOU,UAAU,aACjBV,EAAOW,gBAIXX,EAAOQ,GAAG,cAAc,SAACC,GACnBd,GAAkC,WAAhBD,IACpBM,EAAOY,iBAAiBC,MAAQjB,EAChCI,EAAOY,iBAAiBN,MAAQT,EAEhCG,EAAOc,eAAgB,EACvBd,EAAOW,gBAIXX,EAAOQ,GAAG,YAAY,SAACC,GACrBd,GAAiB,EACjBK,EAAOU,UAAU,WACjBV,EAAOW,eAwBLI,CAAwBf,KAEzB,CAACA,IAGF,sBAAKgB,UAAWC,IAAOC,IAAvB,UACE,wBAAQC,QAAS,kBAjGvB,SAAoBnB,GAClB,IAAMoB,EAAO,IAAIjB,SAAOkB,KAAK,CAC3BC,IAAK,IACLC,KAAM,IACNjB,MAAO,GACPD,OAAQ,GACRmB,KAAM5B,IAGRwB,EAAKZ,GAAG,YAAY,SAACiB,GACnBC,QAAQC,IAAI,qBAAOF,MAGrBzB,EAAO4B,IAAIR,GACXpB,EAAOW,YAmFoBkB,CAAW7B,IAAlC,uBACA,wBAAQmB,QAAS,kBAjFvB,SAAsBnB,GACpB,IAAM8B,EAAS,IAAI3B,SAAO4B,OAAO,CAC/BT,IAAK,IACLC,KAAM,IACNS,OAAQ,GACRR,KAAM5B,EACNqC,WAAY,IAGdjC,EAAO4B,IAAIE,GACX9B,EAAOW,YAuEoBuB,CAAalC,IAApC,oBACA,wBAAQmB,QAAS,kBArEvB,SAAwBnB,GACtB,IAAMmC,EAAW,IAAIhC,SAAOiC,SAAS,CACnCd,IAAK,IACLC,KAAM,IACNjB,MAAO,GACPD,OAAQ,GACRmB,KAAM5B,EACNqC,WAAY,IAGdjC,EAAO4B,IAAIO,GACXnC,EAAOW,YA0DoB0B,CAAerC,IAAtC,sBACA,wBACEmB,QAAS,kBArHa,SAACmB,EAAKtC,GAClCG,SAAOoC,MAAMC,QACXF,GACA,SAACG,GAECzC,EAAO4B,IAAIa,KAEb,CACEnB,IAAK,EACLC,KAAM,EACNU,WAAY,IAGhBjC,EAAOW,YAyGC+B,CAAsB,kCAAmC1C,IAF7D,mBAOA,wBAAQmB,QAAS,WAnCrBzB,EAmCsC,UAAlC,oBACA,uBAAOiD,KAAK,QAAQC,SAAU,SAACC,GAAD,OAAQjD,EAAeiD,EAAEC,OAAOC,SAC9D,uBACEJ,KAAK,QACLK,IAAK,EACLC,IAAK,GACLL,SAAU,SAACC,GAAD,OAAQhD,EAAegD,EAAEC,OAAOC,SAE5C,wBAAQ5B,QAAS,kBAxCH,SAACnB,GACnBA,EAAOkD,aAAaC,SAAQ,SAACC,GACvBA,IAASpD,EAAOqD,iBAClBrD,EAAOsD,OAAOF,MAqCSG,CAAYvD,IAAnC,uBACA,wBAAQwD,GAAG,e,MC/IjBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.8929113e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"app_app__3mk8F\",\"canvas\":\"app_canvas__1LfB-\"};","import React, { useEffect, useState } from \"react\";\nimport { fabric } from \"fabric\";\n\nimport styles from \"./app.module.scss\";\n\nlet isMousePressed = false;\nlet currentMode;\nlet currentColor = \"#000000\";\nlet currentWidth = 1;\n\nconst initCanvas = () =>\n  new fabric.Canvas(\"canvas\", {\n    height: 500,\n    width: 500,\n    selection: false,\n  });\n\nconst createBackgroundImage = (url, canvas) => {\n  fabric.Image.fromURL(\n    url,\n    (img) => {\n      // img.scale(0.3);\n      canvas.add(img);\n    },\n    {\n      top: 0,\n      left: 0,\n      cornerSize: 7,\n    }\n  );\n  canvas.renderAll();\n};\n\nfunction createRect(canvas) {\n  const rect = new fabric.Rect({\n    top: 100,\n    left: 100,\n    width: 60,\n    height: 70,\n    fill: currentColor,\n  });\n\n  rect.on(\"selected\", (data) => {\n    console.log(\"選中了\", data);\n  });\n\n  canvas.add(rect);\n  canvas.renderAll();\n}\n\nfunction createCircle(canvas) {\n  const circle = new fabric.Circle({\n    top: 200,\n    left: 200,\n    radius: 50,\n    fill: currentColor,\n    cornerSize: 7,\n  });\n\n  canvas.add(circle);\n  canvas.renderAll();\n}\n\nfunction createTriangle(canvas) {\n  const triangle = new fabric.Triangle({\n    top: 400,\n    left: 300,\n    width: 50,\n    height: 70,\n    fill: currentColor,\n    cornerSize: 7,\n  });\n\n  canvas.add(triangle);\n  canvas.renderAll();\n}\n\nconst addCanvasEventListeners = (canvas) => {\n  canvas.on(\"mouse:down\", (event) => {\n    isMousePressed = true;\n\n    if (currentMode === \"pencil\") {\n      canvas.setCursor(\"crosshair\");\n      canvas.renderAll();\n    }\n  });\n\n  canvas.on(\"mouse:move\", (event) => {\n    if (isMousePressed && currentMode === \"pencil\") {\n      canvas.freeDrawingBrush.color = currentColor;\n      canvas.freeDrawingBrush.width = currentWidth;\n\n      canvas.isDrawingMode = true;\n      canvas.renderAll();\n    }\n  });\n\n  canvas.on(\"mouse:up\", (event) => {\n    isMousePressed = false;\n    canvas.setCursor(\"default\");\n    canvas.renderAll();\n  });\n};\n\nconst toggleMode = (mode) => {\n  currentMode = mode;\n};\n\nconst clearCanvas = (canvas) => {\n  canvas.getObjects().forEach((item) => {\n    if (item !== canvas.backgroundImage) {\n      canvas.remove(item);\n    }\n  });\n};\n\nconst App = () => {\n  const [canvas, setCanvas] = useState(\"\");\n  useEffect(() => {\n    setCanvas(initCanvas());\n  }, []);\n\n  useEffect(() => {\n    if (canvas) {\n      addCanvasEventListeners(canvas);\n    }\n  }, [canvas]);\n\n  return (\n    <div className={styles.app}>\n      <button onClick={() => createRect(canvas)}>rectangle</button>\n      <button onClick={() => createCircle(canvas)}>circle</button>\n      <button onClick={() => createTriangle(canvas)}>triangle</button>\n      <button\n        onClick={() =>\n          createBackgroundImage(\"https://i.imgur.com/MFdYlTH.png\", canvas)\n        }\n      >\n        image\n      </button>\n      <button onClick={() => toggleMode(\"pencil\")}>pencil</button>\n      <input type=\"color\" onChange={(e) => (currentColor = e.target.value)} />\n      <input\n        type=\"range\"\n        min={1}\n        max={20}\n        onChange={(e) => (currentWidth = e.target.value)}\n      />\n      <button onClick={() => clearCanvas(canvas)}>clear all</button>\n      <canvas id=\"canvas\"></canvas>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport \"./index.scss\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}